{"version":3,"sources":["webpack:///./sarsa/core/utils.ts","webpack:///./sarsa/core/sprites.ts","webpack:///./sarsa/heatmap.tsx","webpack:///./routes/home/index.tsx","webpack:///./sarsa/core/const.ts","webpack:///./sarsa/core/policies.ts","webpack:///./sarsa/core/agent.ts","webpack:///./sarsa/control.tsx","webpack:///./sarsa/arena.tsx","webpack:///./sarsa/core/map.ts"],"names":["sleep","ms","Promise","resolve","setTimeout","sprites","ground","Image","borderTop","borderLeft","borderRight","borderLeftUp","borderRightUp","borderBottom","borderBottom2","borderBottomLeft","borderBottomLeft2","borderBottomRight","borderBottomRight2","goomba","goomba2","goomba3","marioFace","marioFace1","marioFace2","marioLeft","marioLeft1","marioLeft2","marioRight","marioRight1","marioRight2","marioBack","marioBack1","marioBack2","block","redBlock","blockShadow","src","loaded","res","img","complete","color1","color2","getColor","q","percent","Math","min","max","exp","floor","drawQValues","ctx","Q","w","h","strokeStyle","lineWidth","i","j","fillStyle","fillRect","blockSize","strokeRect","UP","beginPath","moveTo","lineTo","fill","RIGHT","BOTTOM","LEFT","HeatMap","props","canvas","useRef","draw","async","current","getContext","translate","gradient","createLinearGradient","addColorStop","font","textAlign","fillText","drawScale","map","agent","useEffect","width","height","ref","useStyles","makeStyles","theme","createStyles","root","margin","spacing","display","flexDirection","flexWrap","justifyContent","box","marginTop","arena","Home","classes","Agent","initSarsa","addAgent","addElement","Reward","Monster","className","greedy","Infinity","maxIdx","length","push","random","constructor","initialX","initialY","this","lastActions","lastGreedyAction","initialPositionX","initialPositionY","x","y","lastX","lastY","initQ","Qrow","Array","newRun","a","shift","n","nSteps","reinforce","lastRewards","chooseAction","softmax","beta","total","r","cumsum","epsilon","epsilonGreedy","unshift","deltaQ","discount","gamma","learningRate","QLearning","pop","getReward","newPosition","getSprite","t","console","log","dx","dy","drawImage","Radio","RadioTMP","RadioGroup","RadioGroupTMP","FormControlLabel","FormControlLabelTMP","Slider","SliderTMP","Tooltip","TooltipTMP","slider","ValueLabelComponent","children","open","value","enterTouchDelay","placement","title","DiscountFactorPicker","discountFactor","setdiscountFactor","useState","gutterBottom","step","onChange","event","newValue","LearningRatePicker","setLearningRate","StepsPicker","steps","setSteps","marks","LearningStrategy","setQLearning","aria-label","name","control","label","Policy","setSoftmax","setEpsilon","setBeta","Activate","run","setRun","refreshRate","setRefreshRate","playTooltip","newRate","speedup","onClick","fontSize","updateRefreshRate","restart","Arena","delay","Map","turn","agents","MapRow","e","initialRendering","elt","undefined","drawAgent","action","newX","newY","reward","Element","SmallReward"],"mappings":"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","file":"route-home/index.tsx.chunk.ce6d3.esm.js","sourcesContent":["export function sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n","const sprites = {\n    ground: new Image(),\n    borderTop: new Image(),\n    borderLeft: new Image(),\n    borderRight: new Image(),\n    borderLeftUp: new Image(),\n    borderRightUp: new Image(),\n    borderBottom: new Image(),\n    borderBottom2: new Image(),\n    borderBottomLeft: new Image(),\n    borderBottomLeft2: new Image(),\n    borderBottomRight: new Image(),\n    borderBottomRight2: new Image(),\n\n    goomba: new Image(),\n    goomba2: new Image(),\n    goomba3: new Image(),\n\n    marioFace: new Image(),\n    marioFace1: new Image(),\n    marioFace2: new Image(),\n    marioLeft: new Image(),\n    marioLeft1: new Image(),\n    marioLeft2: new Image(),\n    marioRight: new Image(),\n    marioRight1: new Image(),\n    marioRight2: new Image(),\n    marioBack: new Image(),\n    marioBack1: new Image(),\n    marioBack2: new Image(),\n\n    block: new Image(),\n    redBlock: new Image(),\n    blockShadow: new Image()\n};\n\nsprites.ground.src = \"assets/ground.png\";\nsprites.borderTop.src = \"assets/border_top.png\";\nsprites.borderLeft.src = \"assets/border_left.png\";\nsprites.borderRight.src = \"assets/border_right.png\";\nsprites.borderLeftUp.src = \"assets/border_left_up.png\";\nsprites.borderRightUp.src = \"assets/border_right_up.png\";\nsprites.borderBottom.src = \"assets/border_bottom.png\";\nsprites.borderBottom2.src = \"assets/border_bottom2.png\";\nsprites.borderBottomLeft.src = \"assets/border_bottom_left.png\";\nsprites.borderBottomLeft2.src = \"assets/border_bottom_left2.png\";\nsprites.borderBottomRight.src = \"assets/border_bottom_right.png\";\nsprites.borderBottomRight2.src = \"assets/border_bottom_right2.png\";\n\nsprites.goomba.src = \"assets/goomba.png\";\nsprites.goomba2.src = \"assets/goomba2.png\";\nsprites.goomba3.src = \"assets/goomba3.png\";\n\nsprites.marioFace.src = \"assets/mario_front.png\";\nsprites.marioFace1.src = \"assets/mario_front1.png\";\nsprites.marioFace2.src = \"assets/mario_front2.png\";\nsprites.marioBack.src = \"assets/mario_back.png\";\nsprites.marioBack1.src = \"assets/mario_back1.png\";\nsprites.marioBack2.src = \"assets/mario_back2.png\";\nsprites.marioRight.src = \"assets/mario_right.png\";\nsprites.marioRight1.src = \"assets/mario_right1.png\";\nsprites.marioRight2.src = \"assets/mario_right2.png\";\nsprites.marioLeft.src = \"assets/mario_left.png\";\nsprites.marioLeft1.src = \"assets/mario_left1.png\";\nsprites.marioLeft2.src = \"assets/mario_left2.png\";\n\nsprites.block.src = \"assets/block.png\";\nsprites.redBlock.src = \"assets/red_block.png\";\nsprites.blockShadow.src = \"assets/block_shadow.png\";\n\nexport const loaded = () => {\n    let res = true;\n    for (let img in sprites) {\n        res = res && sprites[img].complete;\n    }\n    return res;\n};\n\nexport default sprites;\n","import * as preact from \"preact\";\nimport { useRef, useEffect } from \"preact/hooks\";\nimport { blockSize, UP, BOTTOM, RIGHT, LEFT } from \"./core/const\";\nimport { sleep } from \"./core/utils\";\nimport { Map } from \"./core/map\";\nimport Agent from \"./core/agent\";\n\nconst color1 = [255, 0, 255];\nconst color2 = [0, 255, 255];\n\nconst getColor = (q: number) => {\n    const percent = Math.min(1, Math.max(0, 1 / (1 + Math.exp(-3 * q))));\n    return `rgb(\n        ${Math.floor(color2[0] + (color1[0] - color2[0]) * percent)},\n        ${Math.floor(color2[1] + (color1[1] - color2[1]) * percent)},\n        ${Math.floor(color2[2] + (color1[2] - color2[2]) * percent)})`;\n};\n\nconst drawScale = (ctx: CanvasRenderingContext2D, w: number, h: number) => {\n    ctx.strokeStyle = \"#000000\";\n    const gradient = ctx.createLinearGradient(\n        0,\n        (0.5 + h) * blockSize,\n        w * blockSize,\n        (0.9 + h) * blockSize\n    );\n    gradient.addColorStop(1, `rgb(${color1[0]},${color1[1]},${color1[2]})`);\n    gradient.addColorStop(0, `rgb(${color2[0]},${color2[1]},${color2[2]})`);\n    ctx.fillStyle = gradient;\n    ctx.strokeRect(0, (0.5 + h) * blockSize, w * blockSize, 0.4 * blockSize);\n    ctx.fillRect(0, (0.5 + h) * blockSize, w * blockSize, 0.4 * blockSize);\n\n    ctx.font = \"14px sans-serif\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillText(\"0\", (w * blockSize) / 2, (1.5 + h) * blockSize);\n    ctx.fillText(\"+∞\", w * blockSize, (1.5 + h) * blockSize);\n    ctx.fillText(\"-∞\", 0, (1.5 + h) * blockSize);\n};\n\nconst drawQValues = (\n    ctx: CanvasRenderingContext2D,\n    Q: number[][][],\n    w: number,\n    h: number\n) => {\n    ctx.strokeStyle = \"#000000\";\n    ctx.lineWidth = 1;\n    for (let i = 0; i < w; i++) {\n        for (let j = 0; j < h; j++) {\n            ctx.fillStyle = getColor(0);\n            ctx.fillRect(i * blockSize, j * blockSize, blockSize, blockSize);\n            ctx.strokeRect(i * blockSize, j * blockSize, blockSize, blockSize);\n\n            ctx.fillStyle = getColor(Q[i][j][UP]);\n            ctx.beginPath();\n            ctx.moveTo((i + 0.5) * blockSize, (j + 0.5) * blockSize);\n            ctx.lineTo((i + 1) * blockSize, j * blockSize);\n            ctx.lineTo(i * blockSize, j * blockSize);\n            ctx.fill();\n\n            ctx.fillStyle = getColor(Q[i][j][RIGHT]);\n            ctx.beginPath();\n            ctx.moveTo((i + 0.5) * blockSize, (j + 0.5) * blockSize);\n            ctx.lineTo((i + 1) * blockSize, j * blockSize);\n            ctx.lineTo((i + 1) * blockSize, (j + 1) * blockSize);\n            ctx.fill();\n\n            ctx.fillStyle = getColor(Q[i][j][BOTTOM]);\n            ctx.beginPath();\n            ctx.moveTo((i + 0.5) * blockSize, (j + 0.5) * blockSize);\n            ctx.lineTo((i + 1) * blockSize, (j + 1) * blockSize);\n            ctx.lineTo(i * blockSize, (j + 1) * blockSize);\n            ctx.fill();\n\n            ctx.fillStyle = getColor(Q[i][j][LEFT]);\n            ctx.beginPath();\n            ctx.moveTo((i + 0.5) * blockSize, (j + 0.5) * blockSize);\n            ctx.lineTo(i * blockSize, (j + 1) * blockSize);\n            ctx.lineTo(i * blockSize, j * blockSize);\n            ctx.fill();\n        }\n    }\n};\n\nexport const HeatMap = (props: { map: Map; agent: Agent }) => {\n    const canvas = useRef<null | HTMLCanvasElement>(null);\n\n    const draw = async () => {\n        if (canvas.current == null) return;\n\n        const ctx = canvas.current.getContext(\"2d\");\n        if (ctx == null) return;\n\n        ctx.translate(blockSize, blockSize);\n\n        drawScale(ctx, props.map.w, props.map.h);\n        while (true) {\n            drawQValues(ctx, props.agent.Q, props.map.w, props.map.h);\n            await sleep(200);\n        }\n    };\n\n    useEffect(() => {\n        draw();\n    });\n\n    return (\n        <canvas\n            width={(2 + props.map.w) * blockSize}\n            height={(3 + props.map.h) * blockSize}\n            ref={canvas}\n            // style=\"margin:2rem\"\n        />\n    );\n};\n","import * as preact from \"preact\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { initSarsa, Monster, Reward, SmallReward } from \"../../sarsa/core/map\";\nimport Agent from \"../../sarsa/core/agent\";\nimport { Arena } from \"../../sarsa/arena\";\nimport { HeatMap } from \"../../sarsa/heatmap\";\nimport {\n    Activate,\n    LearningRatePicker,\n    DiscountFactorPicker,\n    StepsPicker,\n    Policy,\n    LearningStrategy\n} from \"../../sarsa/control\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: theme.spacing(3),\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\"\n        },\n        box: {\n            margin: theme.spacing(1),\n            marginTop: 0\n        },\n        arena: {\n            margin: \"auto\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\"\n        }\n    })\n);\n\nconst Home: preact.FunctionalComponent = () => {\n    const classes = useStyles();\n\n    const height = 6;\n    const width = 4;\n    const agent = new Agent(height, width);\n    const map = initSarsa(height, width);\n    map.addAgent(agent);\n    map.addElement(new Reward(), 3, 2);\n    map.addElement(new Reward(), 0, 4);\n    map.addElement(new Monster(), 3, 3);\n    map.addElement(new Monster(), 2, 0);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.box}>\n                <Activate map={map} />\n                <LearningRatePicker agent={agent} />\n                <DiscountFactorPicker agent={agent} />\n                <StepsPicker agent={agent} />\n            </div>\n            <div className={classes.box}>\n                <Policy agent={agent} />\n                <LearningStrategy agent={agent} />\n            </div>\n            <div className={classes.arena}>\n                <Arena map={map} />\n                <HeatMap map={map} agent={agent} />\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","export const UP = 0;\nexport const RIGHT = 1;\nexport const BOTTOM = 2;\nexport const LEFT = 3;\n\nexport const blockSize = 24;\n","export const greedy = (Q: number[]) => {\n    let max = -Infinity;\n    let maxIdx: number[] = [];\n    for (let i = 0; i < Q.length; i++) {\n        if (Q[i] > max) {\n            maxIdx = [i];\n            max = Q[i];\n        } else if (Q[i] == max) {\n            maxIdx.push(i);\n        }\n    }\n\n    if (maxIdx.length == 1) return maxIdx[0];\n    return maxIdx[Math.floor(Math.random() * maxIdx.length)];\n};\n\nexport const epsilonGreedy = (epsilon: number, Q: number[]) => {\n    if (Math.random() < epsilon) {\n        return Math.floor(Math.random() * Q.length);\n    }\n    return greedy(Q);\n};\n\nexport const softmax = (beta: number, Q: number[]) => {\n    let total = 0;\n    for (let i = 0; i < 4; i++) {\n        total += Math.exp(beta * Q[i]);\n    }\n\n    const r = Math.random();\n    let cumsum = 0;\n    for (let i = 0; i < 4; i++) {\n        cumsum += Math.exp(beta * Q[i]) / total;\n        if (cumsum >= r) {\n            return i;\n        }\n    }\n    return 3;\n};\n","import sprites from \"./sprites\";\nimport { RIGHT, LEFT, UP, BOTTOM, blockSize } from \"./const\";\nimport { epsilonGreedy, greedy, softmax } from \"./policies\";\n\nconst nbActions = 4;\n\nexport default class Agent {\n    Q: number[][][] = [[[]]];\n    learningRate = 0.3;\n    gamma = 0.8;\n    epsilon = 0.2;\n    beta = 3;\n    softmax = false;\n    QLearning = false;\n    nSteps = 1;\n    x: number;\n    y: number;\n    lastX: number[];\n    lastY: number[];\n    lastRewards: number[] = [];\n    lastActions: number[] = [];\n    lastGreedyAction: number;\n    initialPositionX = 0;\n    initialPositionY = 0;\n\n    constructor(\n        height: number,\n        width: number,\n        initialX?: number,\n        initialY?: number\n    ) {\n        this.lastActions = [BOTTOM];\n        this.lastGreedyAction = BOTTOM;\n        this.initialPositionX = initialX || 0;\n        this.initialPositionY = initialY || 0;\n        this.x = this.initialPositionX;\n        this.y = this.initialPositionY;\n        this.lastX = [this.initialPositionX];\n        this.lastY = [this.initialPositionY];\n        this.initQ(height, width);\n    }\n\n    initQ(height: number, width: number) {\n        this.Q = [];\n        for (let i = 0; i < width; i++) {\n            const Qrow: number[][] = [];\n            for (let j = 0; j < height; j++) {\n                Qrow.push(new Array(nbActions).fill(0));\n            }\n            this.Q.push(Qrow);\n        }\n    }\n\n    newRun() {\n        const a = this.lastActions?.shift() || BOTTOM;\n        for (let n = this.nSteps; n > 0; n--) {\n            this.reinforce(n, a);\n        }\n\n        this.x = this.initialPositionX;\n        this.y = this.initialPositionY;\n        this.lastX = [this.initialPositionX];\n        this.lastY = [this.initialPositionY];\n        this.lastRewards = [];\n        this.lastActions = [BOTTOM];\n    }\n\n    chooseAction() {\n        const Q = this.Q[this.x][this.y];\n        let a: number;\n        if (this.softmax) {\n            a = softmax(this.beta, Q);\n        } else a = epsilonGreedy(this.epsilon, Q);\n        this.lastGreedyAction = greedy(Q);\n\n        this.reinforce(this.nSteps, a);\n        this.lastActions.unshift(a);\n        return a;\n    }\n\n    reinforce(n: number, a: number) {\n        if (this.lastRewards.length < n) {\n            return;\n        }\n        let deltaQ = -this.Q[this.lastX[n - 1]][this.lastY[n - 1]][\n            this.lastActions[n - 1]\n        ];\n        let discount = 1;\n        for (let i = n - 1; i >= 0; i--) {\n            deltaQ += this.lastRewards[i] * discount;\n            discount *= this.gamma;\n        }\n\n        if (this.QLearning) {\n            deltaQ += discount * this.Q[this.x][this.y][this.lastGreedyAction];\n        } else {\n            deltaQ += discount * this.Q[this.x][this.y][a];\n        }\n\n        this.Q[this.lastX[n - 1]][this.lastY[n - 1]][this.lastActions[n - 1]] +=\n            this.learningRate * deltaQ;\n\n        // Free memory\n        this.lastActions.pop();\n        this.lastRewards.pop();\n        this.lastX.pop();\n        this.lastY.pop();\n    }\n\n    getReward(r: number) {\n        this.lastRewards.unshift(r);\n    }\n\n    newPosition(x: number, y: number) {\n        this.lastX.unshift(this.x);\n        this.lastY.unshift(this.y);\n        this.x = x;\n        this.y = y;\n    }\n\n    getSprite(t: number) {\n        switch (this.lastActions[0]) {\n            case UP:\n                switch (t % 4) {\n                    case 0:\n                        return sprites.marioBack;\n                    case 1:\n                        return sprites.marioBack1;\n                    case 2:\n                        return sprites.marioBack;\n                    case 3:\n                        return sprites.marioBack2;\n                }\n            case RIGHT:\n                switch (t % 4) {\n                    case 0:\n                        return sprites.marioRight;\n                    case 1:\n                        return sprites.marioRight1;\n                    case 2:\n                        return sprites.marioRight;\n                    case 3:\n                        return sprites.marioRight2;\n                }\n            case BOTTOM:\n                switch (t % 4) {\n                    case 0:\n                        return sprites.marioFace;\n                    case 1:\n                        return sprites.marioFace1;\n                    case 2:\n                        return sprites.marioFace;\n                    case 3:\n                        return sprites.marioFace2;\n                }\n            case LEFT:\n                switch (t % 4) {\n                    case 0:\n                        return sprites.marioLeft;\n                    case 1:\n                        return sprites.marioLeft1;\n                    case 2:\n                        return sprites.marioLeft;\n                    case 3:\n                        return sprites.marioLeft2;\n                }\n            default:\n                console.log(\n                    \"Failed to get sprite for agent: \" + this.lastActions\n                );\n                return sprites.marioFace;\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D, t: number) {\n        const dx = ((this.x - this.lastX[0]) * ((t % 4) + 1)) / 4;\n        const dy = ((this.y - this.lastY[0]) * ((t % 4) + 1)) / 4;\n\n        ctx.drawImage(\n            this.getSprite(t),\n            blockSize * (this.lastX[0] + dx),\n            blockSize * (this.lastY[0] + dy) - blockSize / 2\n        );\n    }\n}\n","import * as preact from \"preact\";\nimport { useState } from \"preact/hooks\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport SliderTMP from \"@material-ui/core/Slider\";\nimport TooltipTMP from \"@material-ui/core/Tooltip\";\nimport RadioTMP from \"@material-ui/core/Radio\";\nimport RadioGroupTMP from \"@material-ui/core/RadioGroup\";\nimport FormControlLabelTMP from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport Pause from \"@material-ui/icons/Pause\";\nimport FastForward from \"@material-ui/icons/FastForward\";\nimport { Map } from \"./core/map\";\nimport Agent from \"./core/agent\";\n\n// Todo: remove this, it is a Workaround for https://github.com/preactjs/preact-cli/issues/1030\nconst Radio: any = RadioTMP as any;\nconst RadioGroup: any = RadioGroupTMP as any;\nconst FormControlLabel: any = FormControlLabelTMP as any;\nconst Slider: any = SliderTMP as any;\nconst Tooltip: any = TooltipTMP as any;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        slider: {\n            width: 100 + theme.spacing(3) * 2\n        },\n        margin: {\n            height: theme.spacing(3)\n        }\n    })\n);\n\ninterface IToolTipProps {\n    children: React.ReactElement;\n    open: boolean;\n    value: number;\n}\n\n// Todo: remove any, it is a Workaround for https://github.com/preactjs/preact-cli/issues/1030\nconst ValueLabelComponent: any = (props: IToolTipProps) => {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n};\n\nexport const DiscountFactorPicker = (props: { agent: Agent }) => {\n    const [discountFactor, setdiscountFactor] = useState(props.agent.gamma);\n    const classes = useStyles();\n\n    const handleChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue !== \"number\") {\n            newValue = newValue[0];\n        }\n        props.agent.gamma = newValue;\n        setdiscountFactor(newValue);\n    };\n\n    return (\n        <div>\n            <Typography gutterBottom>Discount factor</Typography>\n            <Slider\n                min={0}\n                max={1}\n                step={0.02}\n                ValueLabelComponent={ValueLabelComponent}\n                value={discountFactor}\n                onChange={handleChange}\n                className={classes.slider}\n            />\n        </div>\n    );\n};\n\nexport const LearningRatePicker = (props: { agent: Agent }) => {\n    const [learningRate, setLearningRate] = useState(props.agent.learningRate);\n    const classes = useStyles();\n\n    const handleChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue !== \"number\") {\n            newValue = newValue[0];\n        }\n        props.agent.learningRate = newValue;\n        setLearningRate(newValue);\n    };\n\n    return (\n        <div>\n            <Typography gutterBottom>Learning rate</Typography>\n            <Slider\n                min={0}\n                max={1}\n                step={0.02}\n                ValueLabelComponent={ValueLabelComponent}\n                value={learningRate}\n                onChange={handleChange}\n                className={classes.slider}\n            />\n        </div>\n    );\n};\n\nexport const StepsPicker = (props: { agent: Agent }) => {\n    const [steps, setSteps] = useState(props.agent.nSteps);\n    const classes = useStyles();\n\n    const handleChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue !== \"number\") {\n            newValue = newValue[0];\n        }\n        props.agent.nSteps = newValue;\n        setSteps(newValue);\n    };\n\n    return (\n        <div>\n            <Typography gutterBottom>Number of steps</Typography>\n            <Slider\n                min={1}\n                max={4}\n                step={1}\n                marks\n                ValueLabelComponent={ValueLabelComponent}\n                value={steps}\n                onChange={handleChange}\n                className={classes.slider}\n            />\n        </div>\n    );\n};\n\nexport const LearningStrategy = (props: { agent: Agent }) => {\n    const [QLearning, setQLearning] = useState(props.agent.QLearning);\n\n    const handleChange = () => {\n        props.agent.QLearning = !QLearning;\n        setQLearning(!QLearning);\n    };\n\n    return (\n        <div>\n            <RadioGroup\n                aria-label=\"Policy\"\n                name=\"Policy\"\n                value={QLearning}\n                onChange={handleChange}\n            >\n                <FormControlLabel\n                    value={false}\n                    control={<Radio />}\n                    label=\"Sarsa\"\n                />\n                <FormControlLabel\n                    value={true}\n                    control={<Radio />}\n                    label=\"Q-learning\"\n                />\n            </RadioGroup>\n        </div>\n    );\n};\n\nexport const Policy = (props: { agent: Agent }) => {\n    const [softmax, setSoftmax] = useState(props.agent.softmax);\n    const [epsilon, setEpsilon] = useState(props.agent.epsilon);\n    const [beta, setBeta] = useState(props.agent.beta);\n    const classes = useStyles();\n\n    const handleChange = () => {\n        props.agent.softmax = !softmax;\n        setSoftmax(!softmax);\n    };\n\n    const handleEpsilonChange = (event: any, newValue: number) => {\n        props.agent.epsilon = newValue;\n        setEpsilon(newValue);\n    };\n\n    const handleBetaChange = (event: any, newValue: number) => {\n        props.agent.beta = newValue;\n        setBeta(newValue);\n    };\n\n    return (\n        <div>\n            <RadioGroup\n                aria-label=\"Policy\"\n                name=\"Policy\"\n                value={softmax}\n                onChange={handleChange}\n            >\n                <FormControlLabel\n                    value={false}\n                    control={<Radio />}\n                    label=\"ε-greedy\"\n                />\n                <FormControlLabel\n                    value={true}\n                    control={<Radio />}\n                    label=\"Softmax\"\n                />\n            </RadioGroup>\n            {softmax ? (\n                <div>\n                    <Typography gutterBottom>Beta</Typography>\n                    <Slider\n                        min={1}\n                        max={8}\n                        step={0.1}\n                        ValueLabelComponent={ValueLabelComponent}\n                        value={beta}\n                        onChange={handleBetaChange}\n                        className={classes.slider}\n                    />\n                </div>\n            ) : (\n                <div>\n                    <Typography gutterBottom>Epsilon</Typography>\n                    <Slider\n                        min={0}\n                        max={1}\n                        step={0.02}\n                        ValueLabelComponent={ValueLabelComponent}\n                        value={epsilon}\n                        onChange={handleEpsilonChange}\n                        className={classes.slider}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport const Activate = (props: { map: Map }) => {\n    const [run, setRun] = useState(props.map.run);\n    const [refreshRate, setRefreshRate] = useState(props.map.refreshRate);\n\n    const playTooltip = run ? \"Pause\" : \"Start\";\n    let newRate = 200;\n    let speedup = \"x20\";\n    switch (refreshRate) {\n        case 25:\n            speedup = \"x8\";\n            break;\n        case 100:\n            speedup = \"x2\";\n            break;\n        case 200:\n            speedup = \"x1\";\n            break;\n        default:\n            break;\n    }\n\n    const updateRefreshRate = () => {\n        switch (refreshRate) {\n            case 25:\n                newRate = 10;\n                break;\n            case 100:\n                newRate = 25;\n                break;\n            case 200:\n                newRate = 100;\n                break;\n            default:\n                break;\n        }\n\n        props.map.refreshRate = newRate;\n        setRefreshRate(newRate);\n    };\n\n    return (\n        <div>\n            <Tooltip title={playTooltip}>\n                <IconButton\n                    aria-label=\"Play\"\n                    onClick={() => {\n                        props.map.run = !run;\n                        setRun(!run);\n                    }}\n                >\n                    {run ? (\n                        <Pause fontSize=\"small\" />\n                    ) : (\n                        <PlayArrow fontSize=\"small\" />\n                    )}\n                </IconButton>\n            </Tooltip>\n            <Tooltip title={speedup}>\n                <IconButton\n                    aria-label=\"Speed up\"\n                    onClick={() => updateRefreshRate()}\n                >\n                    <FastForward fontSize=\"small\" />\n                </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Reset\">\n                <IconButton\n                    aria-label=\"Restart\"\n                    onClick={() => props.map.restart()}\n                >\n                    <CachedIcon fontSize=\"small\" />\n                </IconButton>\n            </Tooltip>\n        </div>\n    );\n};\n","import * as preact from \"preact\";\nimport { useRef, useEffect } from \"preact/hooks\";\nimport { Map } from \"./core/map\";\nimport { blockSize } from \"./core/const\";\nimport { sleep } from \"./core/utils\";\nimport { loaded } from \"./core/sprites\";\n\nexport const Arena = (props: { map: Map }) => {\n    const canvas = useRef<null | HTMLCanvasElement>(null);\n\n    const draw = async () => {\n        if (canvas.current == null) return;\n\n        const ctx = canvas.current.getContext(\"2d\");\n        if (ctx == null) return;\n\n        ctx.translate(blockSize, blockSize);\n\n        let delay = 10;\n        while (!loaded()) {\n            await sleep(delay);\n            delay = delay * 1.4;\n        }\n\n        while (true) {\n            props.map.draw(ctx);\n            await sleep(props.map.refreshRate);\n        }\n    };\n\n    useEffect(() => {\n        draw();\n    });\n\n    return (\n        <canvas\n            width={(2 + props.map.w) * blockSize}\n            height={(3 + props.map.h) * blockSize}\n            ref={canvas}\n        />\n    );\n};\n","import sprites from \"./sprites\";\nimport Agent from \"./agent\";\nimport { epsilonGreedy } from \"./policies\";\nimport { RIGHT, LEFT, UP, BOTTOM, blockSize } from \"./const\";\n\n// const height = 6;\n// const width = 4;\n\nexport class Map {\n    map: (Element | undefined)[][];\n    agents: Agent[];\n    w: number;\n    h: number;\n    t: number;\n    turn: number;\n\n    run = false;\n    initialRendering = true;\n    refreshRate = 200; // in ms\n\n    constructor(height: number, width: number) {\n        this.turn = 0;\n        this.t = 0;\n        this.w = width;\n        this.h = height;\n        this.agents = [];\n        this.map = [];\n        for (let i = 0; i < width; i++) {\n            const MapRow = new Array(height);\n            this.map.push(MapRow);\n        }\n    }\n\n    addAgent(a: Agent) {\n        this.agents.push(a);\n    }\n\n    addElement(e: Element, x: number, y: number) {\n        this.map[x][y] = e;\n    }\n\n    restart() {\n        this.t = 0;\n        this.turn = 0;\n        for (const agent of this.agents) {\n            agent.initQ(this.h, this.w);\n            agent.newRun();\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (!this.run && !this.initialRendering) return;\n        this.initialRendering = false;\n\n        ctx.drawImage(sprites.borderLeftUp, -blockSize, -blockSize);\n        ctx.drawImage(sprites.borderRightUp, blockSize * this.w, -blockSize);\n        for (let i = 0; i < this.w; i++) {\n            ctx.drawImage(sprites.borderTop, blockSize * i, -blockSize);\n        }\n        for (let j = 0; j < this.h; j++) {\n            for (let i = 0; i < this.w; i++) {\n                ctx.drawImage(sprites.ground, blockSize * i, blockSize * j);\n            }\n        }\n        for (let j = 0; j < this.h; j++) {\n            ctx.drawImage(sprites.borderLeft, -blockSize, blockSize * j);\n            ctx.drawImage(\n                sprites.borderRight,\n                blockSize * this.w,\n                blockSize * j\n            );\n        }\n        for (let j = 0; j < this.h; j++) {\n            // Draw ground, elts and agents\n            for (let i = 0; i < this.w; i++) {\n                const elt = this.map[i][j];\n                if (elt != undefined) elt.draw(ctx, i, j, this.t);\n                this.drawAgent(ctx, i, j);\n            }\n        }\n        for (let i = 0; i < this.w; i++) {\n            ctx.drawImage(\n                sprites.borderBottom,\n                blockSize * i,\n                blockSize * this.h\n            );\n            ctx.drawImage(\n                sprites.borderBottom2,\n                blockSize * i,\n                blockSize * (this.h + 1)\n            );\n        }\n        ctx.drawImage(sprites.borderBottomLeft, -blockSize, blockSize * this.h);\n        ctx.drawImage(\n            sprites.borderBottomLeft2,\n            -blockSize,\n            blockSize * (this.h + 1)\n        );\n        ctx.drawImage(\n            sprites.borderBottomRight,\n            blockSize * this.w,\n            blockSize * this.h\n        );\n        ctx.drawImage(\n            sprites.borderBottomRight2,\n            blockSize * this.w,\n            blockSize * (this.h + 1)\n        );\n\n        this.t++;\n        if (this.t % 4 != 0) return;\n\n        // If a new turn begin\n        this.turn++;\n\n        for (const agent of this.agents) {\n            const action = agent.chooseAction();\n            if (this.map[agent.x][agent.y] != undefined) {\n                agent.newRun();\n                continue;\n            }\n\n            let newX = agent.x;\n            let newY = agent.y;\n            switch (action) {\n                case UP:\n                    if (agent.y > 0) newY--;\n                    break;\n                case RIGHT:\n                    if (agent.x < this.w - 1) newX++;\n                    break;\n                case BOTTOM:\n                    if (agent.y < this.h - 1) newY++;\n                    break;\n                case LEFT:\n                    if (agent.x > 0) newX--;\n                    break;\n            }\n            const elt = this.map[newX][newY];\n            if (elt != undefined) {\n                agent.getReward(elt.reward);\n            } else agent.getReward(0);\n            agent.newPosition(newX, newY);\n        }\n    }\n\n    drawAgent(ctx: CanvasRenderingContext2D, x: number, y: number) {\n        for (const agent of this.agents) {\n            if (agent.x == x && agent.y == y) {\n                agent.draw(ctx, this.t);\n            }\n        }\n    }\n}\n\nabstract class Element {\n    abstract collision: boolean;\n    abstract reward: number;\n    abstract reset: boolean;\n\n    draw(ctx: CanvasRenderingContext2D, x: number, y: number, t: number) {}\n}\n\nexport class Reward extends Element {\n    collision = false;\n    reward = 1;\n    reset = true;\n\n    draw(ctx: CanvasRenderingContext2D, x: number, y: number, t: number) {\n        ctx.drawImage(sprites.block, blockSize * x, blockSize * (y - 1.6));\n        ctx.drawImage(sprites.blockShadow, blockSize * x, blockSize * y);\n    }\n}\n\nexport class SmallReward extends Element {\n    collision = false;\n    reward = 0.5;\n    reset = true;\n\n    draw(ctx: CanvasRenderingContext2D, x: number, y: number, t: number) {\n        ctx.drawImage(sprites.redBlock, blockSize * x, blockSize * (y - 1.6));\n        ctx.drawImage(sprites.blockShadow, blockSize * x, blockSize * y);\n    }\n}\n\nexport class Monster extends Element {\n    collision = false;\n    reward = -1;\n    reset = true;\n\n    draw(ctx: CanvasRenderingContext2D, x: number, y: number, t: number) {\n        switch (t % 4) {\n            case 0:\n                ctx.drawImage(sprites.goomba, blockSize * x, blockSize * y);\n                break;\n            case 1:\n                ctx.drawImage(sprites.goomba2, blockSize * x, blockSize * y);\n                break;\n            case 2:\n                ctx.drawImage(sprites.goomba, blockSize * x, blockSize * y);\n                break;\n            case 3:\n                ctx.drawImage(sprites.goomba3, blockSize * x, blockSize * y);\n                break;\n        }\n    }\n}\n\n// Initialize the map and Q values\nexport function initSarsa(h: number, w: number) {\n    const map = new Map(h, w);\n    return map;\n}\n"],"sourceRoot":""}